<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- ******************** Brush ********************** -->

    <SolidColorBrush x:Key="NormalBrush" Color="#00C6BC" />
    <SolidColorBrush x:Key="HoverBrush" Color="#00FFFF" />
    <SolidColorBrush x:Key="HighlightedBrush" Color="#FFE9B2" />
    <SolidColorBrush x:Key="SelectedBrush" Color="#00FFED" />
    <SolidColorBrush x:Key="BackgroundBrush" Color="#212121" />    

    <LinearGradientBrush x:Key="BlackGradientBrush" StartPoint="0,0" EndPoint="0,1" >
        <GradientStop Color="#171717" Offset="0" />
        <GradientStop Color="#3D3D3D" Offset="0.4" />
        <GradientStop Color="#3D3D3D" Offset="0.5" />
        <GradientStop Color="#171717" Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LightGradientBrush" StartPoint="0,0" EndPoint="0,1" >
        <GradientStop Color="#00A59D" Offset="0" />
        <GradientStop Color="#00FFFF" Offset="0.6" />
        <GradientStop Color="#00FFFF" Offset="0.7" />
        <GradientStop Color="#00A59D" Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DarkGradientBrush" StartPoint="0,0" EndPoint="0,1" >
        <GradientStop Color="#004444" Offset="0" />
        <GradientStop Color="#00ADAD" Offset="0.3" />
        <GradientStop Color="#00ADAD" Offset="0.5" />
        <GradientStop Color="#004444" Offset="1.0" />
    </LinearGradientBrush>

    <!-- ******************** /Brush ********************** -->
    <!-- ******************** DataGrid ******************** -->

    <Style TargetType="DataGrid">
        <Setter Property="ColumnHeaderHeight" Value="50"></Setter>
        <Setter Property="ColumnWidth" Value="auto"></Setter>
        <Setter Property="MaxColumnWidth" Value="300"></Setter>
        <Setter Property="MinColumnWidth" Value="100"></Setter>
        <Setter Property="RowHeight" Value="30"></Setter>
        <Setter Property="Height" Value="auto"></Setter>
        <Setter Property="VerticalScrollBarVisibility" Value="Visible"></Setter>
        <Setter Property="HorizontalScrollBarVisibility" Value="Visible"></Setter>
        <Setter Property="IsReadOnly" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border x:Name="border" SnapsToDevicePixels="True" 
                            Background="{StaticResource BackgroundBrush}"
                            BorderBrush="{StaticResource NormalBrush}"
                            BorderThickness="3" CornerRadius="3" 
                            Padding="{TemplateBinding Padding}">
                        <ScrollViewer>
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"  />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                            Grid.Column="1"  
                                            Visibility="{Binding HeadersVisibility, 
                                                        ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                                        Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                            Grid.ColumnSpan="2" Grid.Row="1" 
                                            CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                             Grid.Column="2"
                                             Grid.Row="1"
                                             Orientation="Vertical"
                                             ViewportSize="{TemplateBinding ViewportHeight}"
                                             Maximum="{TemplateBinding ScrollableHeight}"
                                             Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                             Value="{Binding VerticalOffset, Mode=OneWay, 
                                            RelativeSource={RelativeSource TemplatedParent}}"/>

                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridCell}" >
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}" >
                            <ContentPresenter Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                             VerticalAlignment="Center"  />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Gray"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridRow}" >
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red"
                           Margin="2,0,0,0"
                           Text="!"
                           VerticalAlignment="Center" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}" x:Name="DGR_Row">
                    <Border x:Name="DGR_Border" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"                    
                        SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Name="DGR_CellsPresenter" Grid.Column="1" 
                                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <DataGridCellsPresenter.Style>
                                    <Style TargetType="DataGridCellsPresenter">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True">
                                                <Setter Property="Foreground" Value="Blue"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridCellsPresenter.Style>
                                
                            </DataGridCellsPresenter>
                            <DataGridDetailsPresenter Grid.Column="1" 
                                                  Grid.Row="1"
                                                  SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                  Visibility="{TemplateBinding DetailsVisibility}" />
                            <DataGridRowHeader Grid.RowSpan="2"
                                           SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                           Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>    
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="{x:Null}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Row.IsHighlighted}" Value="False">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="DGR_Border" Property="Background" Value="Black"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Row.IsHighlighted}" Value="True">
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="Background" Value="{StaticResource HighlightedBrush}"></Setter>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DGR_Border" Property="Background" Value="{StaticResource HoverBrush}" />
                            <Setter  Property="Foreground" Value="Black"></Setter>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Row.IsSelected}" Value="True">
                            <Setter Property="Foreground" Value="Red"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style and template for the DataGridColumnHeader-->
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                    <GradientStop Color="#000000" Offset="0" />
                    <GradientStop Color="#161616" Offset="0.4" />
                    <GradientStop Color="#262626" Offset="0.7" />
                    <GradientStop Color="#000000" Offset="1.0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="Foreground" Value="{StaticResource NormalBrush}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalBrush}"/>
        <Setter Property="BorderThickness" Value="1 0 2 2"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                            <GradientStop Color="#161616" Offset="0" />
                            <GradientStop Color="#00DBD0" Offset="0.7" />
                            <GradientStop Color="#000000" Offset="1.0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ******************** /DataGrid ******************** -->
    <!-- ********************* Button ********************* -->

    <Style x:Key="ButtonStyle" TargetType="Button" >
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource NormalBrush}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="#FF171717" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="2" CornerRadius="3" 
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                            HorizontalAlignment="Left" VerticalAlignment="Center" >
                        <Border.Effect>
                            <DropShadowEffect Color="#FF72FFE5" ShadowDepth="0"/>
                        </Border.Effect>
                        <TextBlock Foreground="{TemplateBinding BorderBrush}"
                                   FontSize="15" FontWeight="ExtraBold" FontFamily="{TemplateBinding FontFamily}" 
                                   Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter  Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.01" ScaleY="1.01"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="#16FFE7"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource HoverBrush}" />
                            <Setter Property="BorderThickness" Value="10" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource BlackGradientBrush}"></Setter>
        <Setter Property="BorderBrush" Value="#444444"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="2"
                BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource LightGradientBrush}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DarkGradientBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************* /Button ********************* -->

</ResourceDictionary>